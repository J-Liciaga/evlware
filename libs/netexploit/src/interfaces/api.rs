use axum::{
    routing::post,
    Router,
    Json,
    extract::Path,
};
use serde::Deserialize;
use netexploit::{scan_target, exploit_target, ScanResult, ExploitResult};

#[derive(Deserialize)]
struct ScanParams {
    start_port: u16,
    end_port: u16,
}

#[tokio::main]
async fn main() {
    let app = Router::new()
        .route("/scan/:target", post(scan))
        .route("/exploit/:target/:vulnerability", post(exploit));

    axum::Server::bind(&"0.0.0.0:3000".parse().unwrap())
        .serve(app.into_make_service())
        .await
        .unwrap();
}

async fn scan(
    Path(target): Path<String>, 
    Json(params): Json<ScanParams>
) -> Json<ScanResult> {
    let result = scan_target(
        &target, 
        params.start_port, 
        params.end_port
    ).await.unwrap();
    
    Json(result)
}

async fn exploit(
    Path((target, vulnerability)): Path<(String, String)>
) -> Json<ExploitResult> {
    let result = exploit_target(
        &target, 
        &vulnerability
    ).await.unwrap();

    Json(result);
}
